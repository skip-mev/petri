name: "Run tests"
on:
  push:
    branches:
      - main
      - 'release/**'
  pull_request:
    branches:
      - '**'
    types:
      - opened
      - edited
      - synchronize
  workflow_dispatch:

jobs:
  docker-e2e:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.22'
      - name: Install Latest Docker
        run: |
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu  $(lsb_release -cs)  stable"
          sudo apt-get update
          sudo apt-get install docker-ce
      - name: Run Docker E2E tests
        run: |
          cd cosmos
          go mod edit -replace github.com/skip-mev/petri/core/v3=../core
          cd ..
          make tidy
          make docker-e2e

  digitalocean-e2e:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.22'
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            digitalocean:
              - 'cosmos/**'
              - 'core/provider/digitalocean/**'
              - 'core/provider/clients/**'
      - name: Run DigitalOcean E2E tests
        if: steps.filter.outputs.digitalocean == 'true'
        env:
          DO_API_TOKEN: ${{ secrets.DO_API_TOKEN }}
          DO_IMAGE_ID: ${{ vars.DO_IMAGE_ID }}
          TS_CLIENT_AUTH_KEY: ${{ secrets.TS_CLIENT_AUTH_KEY }}
          TS_SERVER_OAUTH_SECRET: ${{ secrets.TS_SERVER_OAUTH_SECRET }}
        run: |
          cd cosmos
          go mod edit -replace github.com/skip-mev/petri/core/v3=../core
          cd ..
          make tidy
          make digitalocean-e2e

  unit-test:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.22'
      - name: Install Latest Docker
        run: |
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu  $(lsb_release -cs)  stable"
          sudo apt-get update
          sudo apt-get install docker-ce
      - name: Run unit tests
        run: |
          cd cosmos
          go mod edit -replace github.com/skip-mev/petri/core/v3=../core
          cd ..
          make tidy
          make unit-test
